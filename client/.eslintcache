[{"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/index.js":"1","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/App.js":"2","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/timeline-page/Timeline.js":"3","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/user-page/User.js":"4","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/home-page/Home.js":"5","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/queries.js":"6","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/login-page/LoginForm.js":"7","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/signup-page/SignupForm.js":"8","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/auth.js":"9","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/mutations.js":"10"},{"size":270,"mtime":1665108052790,"results":"11","hashOfConfig":"12"},{"size":1494,"mtime":1665082653822,"results":"13","hashOfConfig":"12"},{"size":7138,"mtime":1665103022725,"results":"14","hashOfConfig":"12"},{"size":3635,"mtime":1665082653824,"results":"15","hashOfConfig":"12"},{"size":686,"mtime":1665082653823,"results":"16","hashOfConfig":"12"},{"size":582,"mtime":1664740248726,"results":"17","hashOfConfig":"12"},{"size":2786,"mtime":1665082653823,"results":"18","hashOfConfig":"12"},{"size":2794,"mtime":1665082653824,"results":"19","hashOfConfig":"12"},{"size":1214,"mtime":1665082653825,"results":"20","hashOfConfig":"12"},{"size":1071,"mtime":1665082653825,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u3a45n",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/index.js",[],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/App.js",[],["46","47"],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/timeline-page/Timeline.js",["48","49","50","51"],"// import { Link } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { QUERY_POSTS } from '../../utils/queries';\n\n\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBriefcase, faSchool, faStar, faFaceKissWinkHeart ,faDrum} from '@fortawesome/free-solid-svg-icons';\nimport * as Icon from '@fortawesome/free-solid-svg-icons';\n\nimport React, {Component} from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\n\nconst workIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faBriefcase} />,\n  iconStyle: { background: 'rgb(33, 150, 243)', color: '#fff' }\n};\nconst schoolIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faSchool} />,\n  iconStyle: { background: 'rgb(233, 30, 99)', color: '#fff' }\n};\nconst starIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faStar} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\nconst kissyFaceIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faFaceKissWinkHeart} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\nconst drumIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faDrum} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\n\n\n\n\nconst Timeline = () => {\n  // const { loading, data } = useQuery(QUERY_MATCHUPS, {\n  //   fetchPolicy: \"no-cache\"\n  // });\n\n  const uploadImage = (files) => {\n    console.log(files[0]);\n  }\n\n\n  const timeline = [\n    { icon: kissyFaceIcon, date: '2000- present', title: 'Creative Director', subtitle: 'Miami, FL', desc: 'Creative Direction, User Experience, Visual Design, Project Management, Team Leading' },\n    { icon: drumIcon, date: '2010 - 2011', title: 'Art Director', subtitle: 'San Francisco, CA', desc: 'Creative Direction, User Experience, Visual Design, SEO, Online Marketing' },\n    { icon: workIcon, date: '2008 - 2010', title: 'Web Designer', subtitle: 'Los Angeles, CA', desc: 'User Experience, Visual Design' },\n    { icon: workIcon, date: '2006 - 2008', title: 'Web Designer', subtitle: 'San Francisco, CA', desc: 'User Experience, Visual Design' },\n    { icon: schoolIcon, date: 'April 2013', title: 'Content Marketing for Web, Mobile and Social Media', subtitle: 'Online Course', desc: 'Strategy, Social Media' },\n    { icon: schoolIcon, date: 'November 2012', title: 'Agile Development Scrum Master', subtitle: 'Certification', desc: 'Creative Direction, User Experience, Visual Design' },\n    { icon: schoolIcon, date: '2002 - 2006', title: 'Bachelor of Science in Interactive Digital Media Visual Imaging', subtitle: 'Bachelor Degree', desc: 'Creative Direction, Visual Design' },\n    { icon: starIcon }\n  ];\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar navbar-light bg-light\">\n\n\n\n\n\n\n\n\n        <ul className=\"nav nav-pills\">\n          {/* this will contain our icon */}\n\n\n          <li className=\"nav-item\">\n            <img className=\"\" src=\"#\" alt=''></img>\n          </li>\n\n\n          {/* anchor tag will take you to home page to see everybody elses posts */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Home</a>\n          </li>\n\n\n          {/* anchor tag will take you to users page  */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Profile</a>\n          </li>\n\n\n          {/* this will allow you to look for a specific place and it will render all posts mentioning this location */}\n          <li className=\"nav-item\">\n            <form className=\"form-inline\">\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search For Location\" aria-label=\"Search\" />\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n          </li>\n\n        </ul>\n      </div>\n\n      <div className='card text-center  '>\n        {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n        <div>\n          <h1>Create a new post</h1>\n          <form className=\"post-form\">\n\n            <div className=\"form-group\">\n\n              <div className=\"custom-file\">\n                <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" \n                onChange={(event)=> {\n                  uploadImage(event.target.files);\n                  }} \n                  />\n\n\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">upload picture</button>\n              </div>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            {/* This will contain the caption/text */}\n            <div className=\"form-group\">\n\n              <label htmlFor=\"exampleFormControlTextarea1\">Add a caption</label>\n              <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n            </div>\n\n            {/* this should add the location the post is related to */}\n            <div className=\"form-group\">\n\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Add Location to your Post\" aria-label=\"Search\" />\n\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\n            </div>\n\n            <button type='submit'>Post</button>\n\n          </form>\n\n\n\n\n\n\n\n\n\n\n\n          {/* Timeline */}\n          {/* posts will be rendered according the time and date they were added */}\n\n          {/* return ( */}\n          <div className=\"App\">\n            <h3>TIMELINE </h3>\n            <VerticalTimeline>\n              {timeline.map((t, i) => {\n                const contentStyle = i === 0 ? { background: 'rgb(33, 150, 243)', color: '#fff' } : undefined;\n                const arrowStyle = i === 0 ? { borderRight: '7px solid  rgb(33, 150, 243)' } : undefined;\n\n                return <VerticalTimelineElement\n                  key={i}\n                  className=\"vertical-timeline-element--work\"\n                  contentStyle={contentStyle}\n                  contentArrowStyle={arrowStyle}\n                  date={t.date}\n                  {...t.icon}\n                >\n                  {t.title ? <React.Fragment>\n                    <h3 className=\"vertical-timeline-element-title\">{t.title}</h3>\n                    {t.subtitle && <h4 className=\"vertical-timeline-element-subtitle\">{t.subtitle}</h4>}\n                    {t.desc && <p>{t.desc}</p>}\n                  </React.Fragment> : undefined}\n                </VerticalTimelineElement>\n              })}\n            </VerticalTimeline>\n          </div>\n          {/* ) */}\n\n\n\n\n\n\n\n\n          {/* <div className='container-feed'>\n            <figure className=\"figure\">\n              <img src=\"...\" className=\"figure-img img-fluid rounded\" alt=\"A generic square placeholder image with rounded corners in a figure.\">\n              </img>\n              <figcaption className=\"figure-caption\">The caption will go here.</figcaption>\n            </figure>\n          </div> */}\n        </div>\n\n\n\n\n\n\n      </div>\n\n\n\n    </div >\n\n\n\n  );\n};\n\nexport default Timeline;\n","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/user-page/User.js",["52","53","54","55","56","57"],"import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_POSTS } from '../../utils/queries';\n\nconst User = () => {\n    // const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    //     fetchPolicy: \"no-cache\"\n    // });\n\n\n\n    return (\n        <div className=\"\">\n            <div className=\"\">\n                <ul className=\"nav nav-pills\">\n                    {/* this will contain our icon */}\n                    <li className=\"nav-item\">\n                        <img className=\"\" src=\"#\" alt=''></img>\n                    </li>\n                    {/* anchor tag will take you to home page to see everybody elses posts */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Home</a>\n                    </li>\n                    {/* anchor tag will take you to users page  */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Profile</a>\n                    </li>\n                    {/* this will allow you to look for a specific place and it will render all posts mentioning this location */}\n                    <li className=\"nav-item\">\n                        <form className=\"form-inline\">\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search For Place\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    </li>\n\n                </ul>\n\n\n\n                {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n\n                <form className=\"post-form\">\n\n                    <div className=\"form-group\">\n\n                        <div className=\"custom-file\">\n                            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" />\n\n\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">upload file</label>\n                        </div>\n\n                    </div>\n\n                    {/* This will contain the caption/text */}\n                    <div className=\"form-group\">\n\n                        <label htmlFor=\"exampleFormControlTextarea1\">Add a caption</label>\n                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                    </div>\n\n                    {/* this should add the location the post is related to */}\n                    <div className=\"form-group\">\n\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\n                    </div>\n\n                    <button type='submit'>Post</button>\n\n                </form>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                {/* Timeline */}\n                {/* posts will be rendered according the time and date they were added */}\n\n                <div className='container-feed'>\n                    <figure className=\"figure\">\n                        <img src=\"...\" className=\"figure-img img-fluid rounded\" alt=\"A generic square placeholder image with rounded corners in a figure.\">\n                        </img>\n                        <figcaption className=\"figure-caption\">The caption will go here.</figcaption>\n                    </figure>\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </div >\n\n\n\n    );\n};\n\nexport default User;\n","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/home-page/Home.js",["58"],"import React from 'react';\n//import { useQuery } from '@apollo/client';\nimport Login from '../login-page/LoginForm';\nimport SignupForm from '../signup-page/SignupForm';\n\n\nconst Home = () => {\n  //const { loading, data } = useQuery(QUERY_THOUGHTS);\n  // const thoughts = data?.thoughts || [];\n  const loading = true;\n  return (\n    <main className='container flex-row justify-center'>\n      <div className=\" form flex-row justify-center\">\n        <div className=\"col-12 col-md-8 mb-3\" >\n\n          <Login />\n\n        </div>\n     \n\n        <div className=\"col-12 col-md-8 mb-3 \">\n\n          <SignupForm\n\n          />\n\n        </div>\n      </div>\n    </main >\n  );\n};\n\nexport default Home;","/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/queries.js",[],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/login-page/LoginForm.js",[],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/pages/signup-page/SignupForm.js",[],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/auth.js",[],"/Users/aleenaalexia/dev/TravelCommunityPlatform/client/src/utils/mutations.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":11,"column":16,"nodeType":"65","messageId":"66","endLine":11,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":87,"column":13,"nodeType":"70","endLine":87,"endColumn":46},{"ruleId":"68","severity":1,"message":"69","line":93,"column":13,"nodeType":"70","endLine":93,"endColumn":46},{"ruleId":"63","severity":1,"message":"71","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":14},{"ruleId":"63","severity":1,"message":"72","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"73","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":22,"column":25,"nodeType":"70","endLine":22,"endColumn":58},{"ruleId":"68","severity":1,"message":"69","line":26,"column":25,"nodeType":"70","endLine":26,"endColumn":58},{"ruleId":"74","severity":1,"message":"75","line":94,"column":25,"nodeType":"70","endLine":94,"endColumn":156},{"ruleId":"63","severity":1,"message":"76","line":10,"column":9,"nodeType":"65","messageId":"66","endLine":10,"endColumn":16},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'useQuery' is defined but never used.","'QUERY_POSTS' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]