[{"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\index.js":"1","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\App.js":"2","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\signup-page\\SignupForm.js":"3","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\timeline-page\\Timeline.js":"4","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\home-page\\Home.js":"5","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\login-page\\LoginForm.js":"6","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\Header\\index.js":"7","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\Footer\\index.js":"8","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\auth.js":"9","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\queries.js":"10","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\mutations.js":"11","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\PostList\\index.js":"12","C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\PostForm\\index.js":"13"},{"size":198,"mtime":1665259357983,"results":"14","hashOfConfig":"15"},{"size":1513,"mtime":1665259357971,"results":"16","hashOfConfig":"15"},{"size":2794,"mtime":1665026116553,"results":"17","hashOfConfig":"15"},{"size":878,"mtime":1665185287037,"results":"18","hashOfConfig":"15"},{"size":627,"mtime":1665116975128,"results":"19","hashOfConfig":"15"},{"size":2539,"mtime":1665259357985,"results":"20","hashOfConfig":"15"},{"size":1451,"mtime":1665259357977,"results":"21","hashOfConfig":"15"},{"size":871,"mtime":1665259357974,"results":"22","hashOfConfig":"15"},{"size":1204,"mtime":1665116944803,"results":"23","hashOfConfig":"15"},{"size":582,"mtime":1664728362516,"results":"24","hashOfConfig":"15"},{"size":1198,"mtime":1665259357986,"results":"25","hashOfConfig":"15"},{"size":2276,"mtime":1665259357981,"results":"26","hashOfConfig":"15"},{"size":4501,"mtime":1665259357979,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vihurx",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\index.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\App.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\signup-page\\SignupForm.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\timeline-page\\Timeline.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\home-page\\Home.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\pages\\login-page\\LoginForm.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\auth.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\queries.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\utils\\mutations.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\PostList\\index.js",[],"C:\\Users\\sandr\\Documents\\Coding Bootcamp\\Challenges\\TravelCommunityPlatform\\client\\src\\components\\PostForm\\index.js",["55","56","57","58"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\n\n\n\nconst PostForm = () => {\n    const [postText, setPostText] = useState('');\n    const [postLocation, setPostLocation] = useState('');\n    const [characterCount, setCharacterCount] = useState(0);\n    const [addPost, { error }] = useMutation(ADD_POST, {\n        update(cache, { data: { addPost } }) {\n            try {\n                const { posts } = cache.readQueary({ query: QUERY_POSTS });\n                cache.writeQuery({\n                    query: QUERY_POSTS,\n                    data: { posts: [addPost, ...posts] },\n                });\n            } catch (err) {\n                console.error(err);\n            }\n            const { me } = cache.readQueary({ query: QUERY_ME });\n            cache.writeQuery({\n                query: QUERY_ME,\n                data: { me: { ...me, posts: [...me.posts, addPost] } },\n            });\n        },\n    });\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        if(!previewSource) return;\n        uploadImage(previewSource);\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        console.log(base64EncodedImage);\n        try {\n            await fetch ('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({data: base64EncodedImage}),\n                headers: {'Content-type': 'application/json'}\n            })\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'postText' && value.length <= 300) {\n            setPostText(value);\n            setCharacterCount(value.length);\n        } else if (name === 'postLocation' && value.length <= 50) {\n            setPostLocation(value);\n            setCharacterCount(value.length);\n        }\n    };\n\n\nconst [fileInputState, setFileInputState] = useState('');\nconst [previewSource, setPreviewSource ] = useState('');\nconst [selectedFile, setSelectedFile] = useState('');\n    \nconst handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n\n    return (\n        <div className={`${characterCount === 300 || error ? 'text-danger' : ''}`}>\n            <form className='flex-row justify-center justify-space-between-md align-center' \n                    onSubmit={handleFormSubmit}>\n                <div className=''>\n                    <textarea\n                        name='postText'\n                        placeholder='Create a new post'\n                        value={postText}\n                        className=''\n                        style={{ lineHeight: '1.5', resize: 'vertical' }}\n                        onChange={handleChange}\n                        charactercount='300'\n                    ></textarea>\n                </div>\n                <div className=''>\n                    <textarea\n                        name='postLocation'\n                        placeholder='Add location'\n                        value={postLocation}\n                        className=''\n                        style={{ lineHeight: '1.5', resize: 'vertical' }}\n                        onChange={handleChange}\n                        charactercount='50'\n                    ></textarea>\n                </div>\n                <div className=''>\n                    <button className='btn btn-info' type='submit'>\n                        Post\n                    </button>\n                    <input name='image' \n                    type='file' onChange={handleFileInputChange} value={fileInputState} className='form-input'\n                    />\n                    <button type='submit'> Upload </button>\n                </div>\n            </form>\n\n            {previewSource && (\n                <img src={previewSource} alt='chosen'\n                style={{height: '300px' }}\n                />\n            )}\n\n            {/* <Image style={{width:200}} cloudName='dk8rcb4sl' publicId='https://res.cloudinary.com/dk8rcb4sl/image/upload/v1665115588/bwv886mltk9hxfdy6v4m.webp'/> */}\n        </div>\n    );\n};\n\nexport default PostForm;\n",{"ruleId":"59","severity":1,"message":"60","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":64,"column":24,"nodeType":"61","messageId":"62","endLine":64,"endColumn":41},{"ruleId":"59","severity":1,"message":"64","line":66,"column":8,"nodeType":"61","messageId":"62","endLine":66,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":66,"column":22,"nodeType":"61","messageId":"62","endLine":66,"endColumn":37},"no-unused-vars","'addPost' is assigned a value but never used.","Identifier","unusedVar","'setFileInputState' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used."]