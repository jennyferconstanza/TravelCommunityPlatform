[{"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/index.js":"1","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/App.js":"2","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/timeline-page/Timeline.js":"3","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/home-page/Home.js":"4","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/user-page/User.js":"5","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/queries.js":"6","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/signup-page/SignupForm.js":"7","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/login-page/LoginForm.js":"8","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/auth.js":"9","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/mutations.js":"10","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/components/PostList/index.js":"11","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/components/PostForm/index.js":"12"},{"size":266,"mtime":1665027700553,"results":"13","hashOfConfig":"14"},{"size":1494,"mtime":1665027700553,"results":"15","hashOfConfig":"14"},{"size":1695,"mtime":1665105364049,"results":"16","hashOfConfig":"14"},{"size":620,"mtime":1665106228208,"results":"17","hashOfConfig":"14"},{"size":2009,"mtime":1665105330023,"results":"18","hashOfConfig":"14"},{"size":582,"mtime":1664903596218,"results":"19","hashOfConfig":"14"},{"size":2794,"mtime":1665013974945,"results":"20","hashOfConfig":"14"},{"size":2786,"mtime":1665106016203,"results":"21","hashOfConfig":"14"},{"size":1214,"mtime":1665013876866,"results":"22","hashOfConfig":"14"},{"size":1071,"mtime":1664943302784,"results":"23","hashOfConfig":"14"},{"size":1473,"mtime":1665072702908,"results":"24","hashOfConfig":"14"},{"size":3251,"mtime":1665102868529,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ilhup5",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/index.js",[],["54","55"],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/App.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/timeline-page/Timeline.js",["56","57","58"],"\nimport React from 'react';\nimport PostList from '../../components/PostList/index'\nimport PostForm from '../../components/PostForm/index'\n\n\n\nconst Timeline = () => {\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar navbar-light bg-light\">\n        <ul className=\"nav nav-pills\">\n\n          {/* this will contain our icon */}\n          <li className=\"nav-item\">\n            <img className=\"\" src=\"#\" alt=''></img>\n          </li>\n\n\n          {/* anchor tag will take you to home page to see everybody elses posts */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Home</a>\n          </li>\n\n\n          {/* anchor tag will take you to users page  */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Profile</a>\n          </li>\n\n        </ul>\n      </div>\n\n\n\n      {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n      <div className='card text-center  '>\n        <div className=\"flex-row justify-center\">\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n            <PostForm />\n          </div>\n\n        </div>\n\n\n        {/* Timeline */}\n        {/* posts will be rendered according the time and date they were added */}\n\n\n        <div className=\"flex-row justify-center\">\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n            {/* <PostList /> */}\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n  );\n};\n\nexport default Timeline;\n","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/home-page/Home.js",["59","60","61"],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/user-page/User.js",["62","63"],"import PostForm from '../../components/PostForm/index'\nimport PostList from '../../components/PostList/index'\n\nconst User = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"navbar navbar-light bg-light\">\n                <ul className=\"nav nav-pills\">\n\n                    {/* this will contain our icon */}\n                    <li className=\"nav-item\">\n                        <img className=\"\" src=\"#\" alt=''></img>\n                    </li>\n\n\n                    {/* anchor tag will take you to home page to see everybody elses posts */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Home</a>\n                    </li>\n\n\n                    {/* anchor tag will take you to users page  */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Profile</a>\n                    </li>\n\n                </ul>\n            </div>\n\n\n\n            {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n\n            <div className='card text-center  '>\n                <div className=\"flex-row justify-center\">\n                    <div\n                        className=\"col-12 col-md-10 mb-3 p-3\"\n                        style={{ border: '1px dotted #1a1a1a' }}\n                    >\n                        <PostForm />\n                    </div>\n\n                </div>\n\n\n\n                {/* Timeline */}\n                {/* posts will be rendered according the time and date they were added */}\n\n\n                <div className=\"flex-row justify-center\">\n                    <div\n                        className=\"col-12 col-md-10 mb-3 p-3\"\n                        style={{ border: '1px dotted #1a1a1a' }}\n                    >\n                        <PostList />\n                    </div>\n\n                </div>\n\n\n\n            </div>\n\n        </div>\n\n\n\n\n    );\n};\n\nexport default User;\n","/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/queries.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/signup-page/SignupForm.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/pages/login-page/LoginForm.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/auth.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/utils/mutations.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/components/PostList/index.js",[],"/Users/javiermorales/challenges/TravelCommunityPlatform/client/src/components/PostForm/index.js",["64","65"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\n\n//import Auth from '../../utils/auth';\n\nconst PostForm = () => {\n    const [postText, setPostText] = useState('');\n    const [postLocation, setPostLocation] = useState ('');\n    const [characterCount, setCharacterCount] = useState(0);\n    const [addPost, { error }] = useMutation(ADD_POST, {\n        update(cache, { data: { addPost } }) {\n            try {\n                const { posts } = cache.readQueary({ query: QUERY_POSTS });\n                cache.writeQuery({\n                    query: QUERY_POSTS,\n                    data: { posts: [addPost, ...posts] },\n                });\n            } catch (err) {\n                console.error(err);\n            }\n            const { me } = cache.readQueary({ query: QUERY_ME });\n            cache.writeQuery({\n                query: QUERY_ME,\n                data: { me: { ...me, posts: [...me.posts, addPost] } },\n            });\n        },\n    });\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const { data } = await addPost({\n                variables: {\n                    postText,\n                    postAuthor: Auth.getProfile().data.username,\n                    postLocation,\n                },\n            });\n            setPostText('');\n            setPostLocation('');\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'postText' && value.length <= 300) {\n            setPostText(value);\n            setCharacterCount(value.length);\n        }\n    };\n\n    return (\n        <div className={`${characterCount === 300 || error ? 'text-danger' : ''}`}>\n            <form className='' onSubmit={handleFormSubmit}>\n                <div className=''>\n                    <textarea\n                        name='postText'\n                        placeholder='Create a new post'\n                        value={postText}\n                        className=''\n                        style={{ lineHeight: '1.5', resize: 'vertical' }}\n                        onChange={handleChange}\n                        characterCount='300'\n                    ></textarea>\n                </div>\n                <div className=''>\n                    <textarea\n                        name='postLocation'\n                        placeholder='Add location'\n                        value={postLocation}\n                        className=''\n                        style={{ lineHeight: '1.5', resize: 'vertical' }}\n                        onChange={handleChange}\n                        characterCount='50'\n                    ></textarea>\n                </div>\n                <div className=''>\n                    <button className='' type='submit'>\n                        Post\n                    </button>\n                    <button className='' type='upload'>\n                        Upload\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default PostForm;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":24,"column":13,"nodeType":"76","endLine":24,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":30,"column":13,"nodeType":"76","endLine":30,"endColumn":46},{"ruleId":"70","severity":1,"message":"77","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":18},{"ruleId":"70","severity":1,"message":"78","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":7,"column":9,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":19,"column":25,"nodeType":"76","endLine":19,"endColumn":58},{"ruleId":"74","severity":1,"message":"75","line":25,"column":25,"nodeType":"76","endLine":25,"endColumn":58},{"ruleId":"70","severity":1,"message":"80","line":36,"column":21,"nodeType":"72","messageId":"73","endLine":36,"endColumn":25},{"ruleId":"81","severity":2,"message":"82","line":39,"column":33,"nodeType":"72","messageId":"83","endLine":39,"endColumn":37},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'PostList' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useQuery' is defined but never used.","'QUERY_THOUGHTS' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","no-undef","'Auth' is not defined.","undef","no-global-assign","no-unsafe-negation"]