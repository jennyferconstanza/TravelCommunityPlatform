{"version":3,"sources":["utils/queries.js","pages/user-page/User.js","pages/timeline-page/Timeline.js","utils/mutations.js","utils/auth.js","pages/login-page/LoginForm.js","pages/signup-page/SignupForm.js","pages/home-page/Home.js","App.js","index.js"],"names":["gql","User","className","src","alt","href","type","placeholder","id","htmlFor","rows","workIcon","icon","Icon","iconStyle","background","color","schoolIcon","starIcon","kissyFaceIcon","drumIcon","Timeline","timeline","date","title","subtitle","desc","map","t","i","contentStyle","undefined","arrowStyle","borderRight","contentArrowStyle","Fragment","LOGIN_USER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LoginForm","navigate","useNavigate","useState","username","password","userFormData","setUserFormData","useMutation","login","error","data","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","variables","console","log","Auth","loginUser","class","to","onSubmit","onChange","style","cursor","message","SignupForm","email","addUser","currentTarget","checkValidity","stopPropagation","Home","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1b64b47.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      posts {\n        _id\n        postText\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_POSTS = gql`\n  query getPosts {\n    posts {\n      _id\n      postText\n      postAuthor\n      createdAt\n    }\n  }\n`;\n\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      posts {\n        _id\n        postText\n        postAuthor\n        createdAt\n      }\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_POSTS } from '../../utils/queries';\n\nconst User = () => {\n    // const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    //     fetchPolicy: \"no-cache\"\n    // });\n\n\n\n    return (\n        <div className=\"\">\n            <div className=\"\">\n                <ul className=\"nav nav-pills\">\n                    {/* this will contain our icon */}\n                    <li className=\"nav-item\">\n                        <img className=\"\" src=\"#\" alt=''></img>\n                    </li>\n                    {/* anchor tag will take you to home page to see everybody elses posts */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Home</a>\n                    </li>\n                    {/* anchor tag will take you to users page  */}\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Profile</a>\n                    </li>\n                    {/* this will allow you to look for a specific place and it will render all posts mentioning this location */}\n                    <li className=\"nav-item\">\n                        <form className=\"form-inline\">\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search For Place\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    </li>\n\n                </ul>\n\n\n\n                {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n\n                <form className=\"post-form\">\n\n                    <div className=\"form-group\">\n\n                        <div className=\"custom-file\">\n                            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" />\n\n\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">upload file</label>\n                        </div>\n\n                    </div>\n\n                    {/* This will contain the caption/text */}\n                    <div className=\"form-group\">\n\n                        <label htmlFor=\"exampleFormControlTextarea1\">Add a caption</label>\n                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                    </div>\n\n                    {/* this should add the location the post is related to */}\n                    <div className=\"form-group\">\n\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\n                    </div>\n\n                    <button type='submit'>Post</button>\n\n                </form>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                {/* Timeline */}\n                {/* posts will be rendered according the time and date they were added */}\n\n                <div className='container-feed'>\n                    <figure className=\"figure\">\n                        <img src=\"...\" className=\"figure-img img-fluid rounded\" alt=\"A generic square placeholder image with rounded corners in a figure.\">\n                        </img>\n                        <figcaption className=\"figure-caption\">The caption will go here.</figcaption>\n                    </figure>\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </div >\n\n\n\n    );\n};\n\nexport default User;\n","// import { Link } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { QUERY_POSTS } from '../../utils/queries';\n\n\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBriefcase, faSchool, faStar, faFaceKissWinkHeart ,faDrum} from '@fortawesome/free-solid-svg-icons';\nimport * as Icon from '@fortawesome/free-solid-svg-icons';\n\nimport React, {Component} from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\n\nconst workIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faBriefcase} />,\n  iconStyle: { background: 'rgb(33, 150, 243)', color: '#fff' }\n};\nconst schoolIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faSchool} />,\n  iconStyle: { background: 'rgb(233, 30, 99)', color: '#fff' }\n};\nconst starIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faStar} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\nconst kissyFaceIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faFaceKissWinkHeart} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\nconst drumIcon = {\n  icon: <FontAwesomeIcon icon={Icon.faDrum} />,\n  iconStyle: { background: 'rgb(16, 204, 82)', color: '#fff' }\n};\n\n\n\n\nconst Timeline = () => {\n  // const { loading, data } = useQuery(QUERY_MATCHUPS, {\n  //   fetchPolicy: \"no-cache\"\n  // });\n\n\n\n  const timeline = [\n    { icon: kissyFaceIcon, date: '2000- present', title: 'Creative Director', subtitle: 'Miami, FL', desc: 'Creative Direction, User Experience, Visual Design, Project Management, Team Leading' },\n    { icon: drumIcon, date: '2010 - 2011', title: 'Art Director', subtitle: 'San Francisco, CA', desc: 'Creative Direction, User Experience, Visual Design, SEO, Online Marketing' },\n    { icon: workIcon, date: '2008 - 2010', title: 'Web Designer', subtitle: 'Los Angeles, CA', desc: 'User Experience, Visual Design' },\n    { icon: workIcon, date: '2006 - 2008', title: 'Web Designer', subtitle: 'San Francisco, CA', desc: 'User Experience, Visual Design' },\n    { icon: schoolIcon, date: 'April 2013', title: 'Content Marketing for Web, Mobile and Social Media', subtitle: 'Online Course', desc: 'Strategy, Social Media' },\n    { icon: schoolIcon, date: 'November 2012', title: 'Agile Development Scrum Master', subtitle: 'Certification', desc: 'Creative Direction, User Experience, Visual Design' },\n    { icon: schoolIcon, date: '2002 - 2006', title: 'Bachelor of Science in Interactive Digital Media Visual Imaging', subtitle: 'Bachelor Degree', desc: 'Creative Direction, Visual Design' },\n    { icon: starIcon }\n  ];\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar navbar-light bg-light\">\n\n\n\n\n\n\n\n\n        <ul className=\"nav nav-pills\">\n          {/* this will contain our icon */}\n\n\n          <li className=\"nav-item\">\n            <img className=\"\" src=\"#\" alt=''></img>\n          </li>\n\n\n          {/* anchor tag will take you to home page to see everybody elses posts */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Home</a>\n          </li>\n\n\n          {/* anchor tag will take you to users page  */}\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Profile</a>\n          </li>\n\n\n          {/* this will allow you to look for a specific place and it will render all posts mentioning this location */}\n          <li className=\"nav-item\">\n            <form className=\"form-inline\">\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search For Location\" aria-label=\"Search\" />\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n          </li>\n\n        </ul>\n      </div>\n\n      <div className='card text-center  '>\n        {/* form to create posts, it contains options to upload a picture, add a caption or a piece of text and  option to add location  */}\n        <div>\n          <h1>Create a new post</h1>\n          <form className=\"post-form\">\n\n            <div className=\"form-group\">\n\n              <div className=\"custom-file\">\n                <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile01\" />\n\n\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">upload picture</button>\n              </div>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            {/* This will contain the caption/text */}\n            <div className=\"form-group\">\n\n              <label htmlFor=\"exampleFormControlTextarea1\">Add a caption</label>\n              <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n            </div>\n\n            {/* this should add the location the post is related to */}\n            <div className=\"form-group\">\n\n              <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Add Location to your Post\" aria-label=\"Search\" />\n\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\n            </div>\n\n            <button type='submit'>Post</button>\n\n          </form>\n\n\n\n\n\n\n\n\n\n\n\n          {/* Timeline */}\n          {/* posts will be rendered according the time and date they were added */}\n\n          {/* return ( */}\n          <div className=\"App\">\n            <h3>TIMELINE </h3>\n            <VerticalTimeline>\n              {timeline.map((t, i) => {\n                const contentStyle = i === 0 ? { background: 'rgb(33, 150, 243)', color: '#fff' } : undefined;\n                const arrowStyle = i === 0 ? { borderRight: '7px solid  rgb(33, 150, 243)' } : undefined;\n\n                return <VerticalTimelineElement\n                  key={i}\n                  className=\"vertical-timeline-element--work\"\n                  contentStyle={contentStyle}\n                  contentArrowStyle={arrowStyle}\n                  date={t.date}\n                  {...t.icon}\n                >\n                  {t.title ? <React.Fragment>\n                    <h3 className=\"vertical-timeline-element-title\">{t.title}</h3>\n                    {t.subtitle && <h4 className=\"vertical-timeline-element-subtitle\">{t.subtitle}</h4>}\n                    {t.desc && <p>{t.desc}</p>}\n                  </React.Fragment> : undefined}\n                </VerticalTimelineElement>\n              })}\n            </VerticalTimeline>\n          </div>\n          {/* ) */}\n\n\n\n\n\n\n\n\n          {/* <div className='container-feed'>\n            <figure className=\"figure\">\n              <img src=\"...\" className=\"figure-img img-fluid rounded\" alt=\"A generic square placeholder image with rounded corners in a figure.\">\n              </img>\n              <figcaption className=\"figure-caption\">The caption will go here.</figcaption>\n            </figure>\n          </div> */}\n        </div>\n\n\n\n\n\n\n      </div>\n\n\n\n    </div >\n\n\n\n  );\n};\n\nexport default Timeline;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation loginUser($username: String!, $password: String!) {\n    loginUser(username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_POST = gql`\n  mutation addPost($postText: String!) {\n    addPost(postText: $postText) {\n      _id\n      postText\n      postAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n\n","// use this to decode a token and get the user's information out of it\nimport decode from \"jwt-decode\";\n\n// create a new class for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n// import useMutation and LOGIN_USER\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\n\n\n\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\n\nimport Auth from '../../utils/auth';\n\nconst LoginForm = () => {\n\n\n  const navigate = useNavigate();\n\n\n\n\n\n    const [userFormData, setUserFormData] = useState({ \n        username: \"\",\n        password: \"\",\n     });\n    const [login, { error, data }] = useMutation(LOGIN_USER);\n\n    // update state \n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({\n            ...userFormData,\n            [name]: value,\n        });\n    };\n\n    //submit form\n    const handleFormSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            const { data } = await login({\n                variables: { ...userFormData },\n            });\n            console.log(data)\n            Auth.login(data.loginUser.token);\n\n\n\n setUserFormData({\n            username: \"\",\n            password: \"\",\n        });\n\n            navigate(\"/timeline\");\n\n\n\n\n\n\n\n        } catch (e) {\n            console.error(e);\n        }\n\n       \n    };\n\n    return (\n      <div class=\"card bg-white card-rounded w-50\">\n        <div class=\"card-header text-center\">\n          <h1>Login Form</h1>\n          {data ? (\n            <p>\n              Success! You may now head{\" \"}\n              <Link to=\"/\"> back to the homepage.</Link>\n            </p>\n          ) : (\n            <form onSubmit={handleFormSubmit}>\n              <div class=\"container\">\n                <span>Username</span>\n                <input\n                  className=\"form-input\"\n                  type=\"username\"\n                  placeholder=\"Enter Username\"\n                  name=\"username\"\n                  value={userFormData.username}\n                  onChange={handleInputChange}\n                />\n\n                <span>Password</span>\n                <input\n                  className=\"form-input\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  name=\"password\"\n                  value={userFormData.password}\n                  onChange={handleInputChange}\n                />\n\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          )}\n          {error && (\n            <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n          )}\n        </div>\n      </div>\n    );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import apollo client and ADD_USER mutation\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth\";\n\nconst SignupForm = () => {\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // addUser with useMutation\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    // addUser function\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div class=\"card bg-white card-rounded w-50\">\n      <div class=\"card-header text-center\">\n        <h1>Sign up Form</h1>\n        {data ? (\n          <p>\n            Success! You may now login <Link to=\"/\"> back to the homepage.</Link>\n          </p>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"container\">\n              <span>Username</span>\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                name=\"username\"\n                value={userFormData.name}\n                onChange={handleInputChange}\n              />\n\n              <span>Email</span>\n              <input\n                className=\"form-input\"\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                value={userFormData.email}\n                onChange={handleInputChange}\n              />\n\n              <span>Password</span>\n              <input\n                className=\"form-input\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                value={userFormData.password}\n                onChange={handleInputChange}\n              />\n\n              <button\n                className=\"btn btn-block btn-primary\"\n                type=\"submit\"\n                style={{ cursor: \"pointer \" }}\n              >\n                Sign up\n              </button>\n            </div>\n          </form>\n        )}\n        {error && (\n          <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import React from 'react';\n//import { useQuery } from '@apollo/client';\nimport Login from '../login-page/LoginForm';\nimport SignupForm from '../signup-page/SignupForm';\n\n\nconst Home = () => {\n  //const { loading, data } = useQuery(QUERY_THOUGHTS);\n  // const thoughts = data?.thoughts || [];\n  const loading = true;\n  return (\n    <main className='container flex-row justify-center'>\n      <div className=\" form flex-row justify-center\">\n        <div className=\"col-12 col-md-8 mb-3\" >\n\n          <Login />\n\n        </div>\n     \n\n        <div className=\"col-12 col-md-8 mb-3 \">\n\n          <SignupForm\n\n          />\n\n        </div>\n      </div>\n    </main >\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { \n  ApolloClient, \n  ApolloProvider, \n  InMemoryCache, \n  createHttpLink, \n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport User from './pages/user-page/User';\nimport Timeline from './pages/timeline-page/Timeline';\nimport Home from './pages/home-page/Home';\n \n\n\n\n\n// GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n       <h1>Travel Community Platform</h1>\n        <div className=\"flex-column justify-center align-center min-100-vh \">\n          \n          \n          \n          <Routes>\n            \n            <Route \n              path=\"/\" \n              element={<Home/>}\n            />\n            <Route \n              path=\"/timeline\" \n              element={<Timeline />}\n            />\n            <Route \n              path=\"/user\" \n              element={<User/>}\n            />\n\n          </Routes>\n\n\n          \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '/bootstrap/dist/css/bootstrap.css';\n\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}